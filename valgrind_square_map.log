==7298== Memcheck, a memory error detector
==7298== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==7298== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info
==7298== Command: ./cub3D maps/valid/square_map.cub
==7298== 
[DEBUG] Map start detected at line 16
Allocated row 0
Allocated row 1
Allocated row 2
Allocated row 3
Allocated row 4
Allocated row 5
Allocated row 6
Allocated row 7
Allocated row 8
Allocated row 9
Allocated row 10
Allocated row 11
Allocated row 12
Allocated row 13
Allocated row 14
Allocated row 15
Allocated row 16
Allocated row 17
Allocated row 18
Allocated row 19
Allocated row 20
Allocated row 21
Allocated row 22
Allocated row 23
Allocated row 24
Allocated row 25
Allocated row 26
Map alloc success. Total rows: 27

=== MAP CONTENTS ===
Map dimensions: 25x27
Player count: 1

Map array contents:
Row  0: [111111111111111111111111]
Row  1: [100000000000000000000001]
Row  2: [100000000000000000000001]
Row  3: [100000000N00000000000001]
Row  4: [100000000000000000000001]
Row  5: [100000000000000000000001]
Row  6: [100000000000000000000001]
Row  7: [100000111110000101010001]
Row  8: [100000100010000000000001]
Row  9: [100000100010000100010001]
Row 10: [100000100010000000000001]
Row 11: [100000111100001010100001]
Row 12: [100000000000000000000001]
Row 13: [100000000000000000000001]
Row 14: [100000000000000000000001]
Row 15: [100000000000000000000001]
Row 16: [100000000000000000000001]
Row 17: [100000000000000000000001]
Row 18: [100000000000000000000001]
Row 19: [111111111000000000000001]
Row 20: [100100001000000000000001]
Row 21: [100000101000000000000001]
Row 22: [100100001000000000000001]
Row 23: [100111111000000000000001]
Row 24: [100000000000000000000001]
Row 25: [100000000000000000000001]
Row 26: [111111111111111111111111]
=============

All reachable areas are enclosed by walls
==7298== Syscall param writev(vector[0]) points to uninitialised byte(s)
==7298==    at 0x4BD3864: writev (writev.c:26)
==7298==    by 0x4CCAACA: ??? (in /usr/lib/x86_64-linux-gnu/libxcb.so.1.1.0)
==7298==    by 0x4CCAC4E: ??? (in /usr/lib/x86_64-linux-gnu/libxcb.so.1.1.0)
==7298==    by 0x4CCBD7E: xcb_writev (in /usr/lib/x86_64-linux-gnu/libxcb.so.1.1.0)
==7298==    by 0x48C50B8: _XSend (in /usr/lib/x86_64-linux-gnu/libX11.so.6.4.0)
==7298==    by 0x48CA148: _XReadEvents (in /usr/lib/x86_64-linux-gnu/libX11.so.6.4.0)
==7298==    by 0x48CA52B: XWindowEvent (in /usr/lib/x86_64-linux-gnu/libX11.so.6.4.0)
==7298==    by 0x11B285: mlx_int_wait_first_expose (in /home/bleow/Coding/Core/cub3d/cub3D)
==7298==    by 0x11AF05: mlx_new_window (in /home/bleow/Coding/Core/cub3d/cub3D)
==7298==    by 0x110A05: init_mlx_sys (in /home/bleow/Coding/Core/cub3d/cub3D)
==7298==    by 0x110A6D: init_game (in /home/bleow/Coding/Core/cub3d/cub3D)
==7298==    by 0x11088D: main (in /home/bleow/Coding/Core/cub3d/cub3D)
==7298==  Address 0x4d3340c is 28 bytes inside a block of size 16,384 alloc'd
==7298==    at 0x484D953: calloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7298==    by 0x48B442D: XOpenDisplay (in /usr/lib/x86_64-linux-gnu/libX11.so.6.4.0)
==7298==    by 0x11ACB6: mlx_init (in /home/bleow/Coding/Core/cub3d/cub3D)
==7298==    by 0x110916: init_mlx_sys (in /home/bleow/Coding/Core/cub3d/cub3D)
==7298==    by 0x110A6D: init_game (in /home/bleow/Coding/Core/cub3d/cub3D)
==7298==    by 0x11088D: main (in /home/bleow/Coding/Core/cub3d/cub3D)
==7298== 
chk_and_alloc_door_mem: No doors to initialize.
Memory allocation for minimap data successful
setup_minimap completed successfully
ESC key pressed - Initiating clean exit...
Map array cleanup complete.
Cleanup complete
==7298== 
==7298== HEAP SUMMARY:
==7298==     in use at exit: 31,735 bytes in 400 blocks
==7298==   total heap usage: 76,443 allocs, 76,043 frees, 34,872,881 bytes allocated
==7298== 
==7298== LEAK SUMMARY:
==7298==    definitely lost: 0 bytes in 0 blocks
==7298==    indirectly lost: 0 bytes in 0 blocks
==7298==      possibly lost: 0 bytes in 0 blocks
==7298==    still reachable: 31,735 bytes in 400 blocks
==7298==         suppressed: 0 bytes in 0 blocks
==7298== Reachable blocks (those to which a pointer was found) are not shown.
==7298== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==7298== 
==7298== Use --track-origins=yes to see where uninitialised values come from
==7298== For lists of detected and suppressed errors, rerun with: -s
==7298== ERROR SUMMARY: 13 errors from 1 contexts (suppressed: 0 from 0)
